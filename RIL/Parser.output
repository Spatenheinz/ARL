   0  $accept : %entry% $end

   1  Lval : ID
   2       | M LBRACK ID RBRACK

   3  Rval : Lval
   4       | NUM

   5  Rvals :
   6        | Rval Rvals

   7  Update : ADD
   8         | SUB
   9         | XORWITH

  10  Arith : PLUS
  11        | MINUS
  12        | XOR
  13        | BAND
  14        | BOR
  15        | SHIFTL
  16        | SHIFTR

  17  RelOp : EQUAL
  18        | LESS
  19        | GREATER
  20        | NEQ
  21        | LEQ
  22        | GEQ
  23        | BAND
  24        | NAND

  25  Cond : Lval RelOp Rval

  26  Conds : Cond
  27        | Cond LAND Conds

  28  Entry : BEGIN ID
  29        | ID LARROW
  30        | ID SEMICOLON ID LARROW Cond

  31  Exit : END ID
  32       | RARROW ID
  33       | Cond RARROW ID SEMICOLON ID

  34  Instruct : Lval Update Rval Arith Rval
  35           | Lval Update Rval
  36           | Lval SWAP Lval
  37           | CALL ID
  38           | UNCALL ID
  39           | ASSERT Conds
  40           | READ Lval
  41           | WRITE Lval
  42           | TEST Rvals STRINGCONST
  43           | INCLUDEC STRINGCONST
  44           | Instruct SEMICOLON Instruct
  45           | Cond RARROW ID
  46           | ID LARROW Cond
  47           | SKIP
  48           | TIMER

  49  Block : Entry Instruct Exit

  50  Blocks : EOF
  51         | Block Blocks

  52  Prog : Blocks

  53  %entry% : '\001' Prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . Prog  (53)

	BEGIN  shift 3
	EOF  shift 4
	ID  shift 5
	.  error

	Prog  goto 6
	Entry  goto 7
	Block  goto 8
	Blocks  goto 9


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	Entry : BEGIN . ID  (28)

	ID  shift 10
	.  error


state 4
	Blocks : EOF .  (50)

	.  reduce 50


state 5
	Entry : ID . LARROW  (29)
	Entry : ID . SEMICOLON ID LARROW Cond  (30)

	LARROW  shift 11
	SEMICOLON  shift 12
	.  error


state 6
	%entry% : '\001' Prog .  (53)

	.  reduce 53


state 7
	Block : Entry . Instruct Exit  (49)

	ASSERT  shift 13
	CALL  shift 14
	ID  shift 15
	INCLUDEC  shift 16
	M  shift 17
	READ  shift 18
	SKIP  shift 19
	TEST  shift 20
	TIMER  shift 21
	UNCALL  shift 22
	WRITE  shift 23
	.  error

	Lval  goto 24
	Cond  goto 25
	Instruct  goto 26


state 8
	Blocks : Block . Blocks  (51)

	BEGIN  shift 3
	EOF  shift 4
	ID  shift 5
	.  error

	Entry  goto 7
	Block  goto 8
	Blocks  goto 27


state 9
	Prog : Blocks .  (52)

	.  reduce 52


state 10
	Entry : BEGIN ID .  (28)

	.  reduce 28


state 11
	Entry : ID LARROW .  (29)

	.  reduce 29


state 12
	Entry : ID SEMICOLON . ID LARROW Cond  (30)

	ID  shift 28
	.  error


state 13
	Instruct : ASSERT . Conds  (39)

	ID  shift 29
	M  shift 17
	.  error

	Lval  goto 30
	Cond  goto 31
	Conds  goto 32


state 14
	Instruct : CALL . ID  (37)

	ID  shift 33
	.  error


state 15
	Lval : ID .  (1)
	Instruct : ID . LARROW Cond  (46)

	LARROW  shift 34
	ADD  reduce 1
	BAND  reduce 1
	EQUAL  reduce 1
	GEQ  reduce 1
	GREATER  reduce 1
	LEQ  reduce 1
	LESS  reduce 1
	NAND  reduce 1
	NEQ  reduce 1
	SUB  reduce 1
	SWAP  reduce 1
	XORWITH  reduce 1


state 16
	Instruct : INCLUDEC . STRINGCONST  (43)

	STRINGCONST  shift 35
	.  error


state 17
	Lval : M . LBRACK ID RBRACK  (2)

	LBRACK  shift 36
	.  error


state 18
	Instruct : READ . Lval  (40)

	ID  shift 29
	M  shift 17
	.  error

	Lval  goto 37


state 19
	Instruct : SKIP .  (47)

	.  reduce 47


state 20
	Instruct : TEST . Rvals STRINGCONST  (42)
	Rvals : .  (5)

	ID  shift 29
	M  shift 17
	NUM  shift 38
	STRINGCONST  reduce 5

	Lval  goto 39
	Rval  goto 40
	Rvals  goto 41


state 21
	Instruct : TIMER .  (48)

	.  reduce 48


state 22
	Instruct : UNCALL . ID  (38)

	ID  shift 42
	.  error


state 23
	Instruct : WRITE . Lval  (41)

	ID  shift 29
	M  shift 17
	.  error

	Lval  goto 43


state 24
	Cond : Lval . RelOp Rval  (25)
	Instruct : Lval . Update Rval Arith Rval  (34)
	Instruct : Lval . Update Rval  (35)
	Instruct : Lval . SWAP Lval  (36)

	ADD  shift 44
	BAND  shift 45
	EQUAL  shift 46
	GEQ  shift 47
	GREATER  shift 48
	LEQ  shift 49
	LESS  shift 50
	NAND  shift 51
	NEQ  shift 52
	SUB  shift 53
	SWAP  shift 54
	XORWITH  shift 55
	.  error

	Update  goto 56
	RelOp  goto 57


state 25
	Instruct : Cond . RARROW ID  (45)

	RARROW  shift 58
	.  error


state 26
	Instruct : Instruct . SEMICOLON Instruct  (44)
	Block : Entry Instruct . Exit  (49)

	END  shift 59
	ID  shift 29
	M  shift 17
	RARROW  shift 60
	SEMICOLON  shift 61
	.  error

	Lval  goto 30
	Cond  goto 62
	Exit  goto 63


state 27
	Blocks : Block Blocks .  (51)

	.  reduce 51


state 28
	Entry : ID SEMICOLON ID . LARROW Cond  (30)

	LARROW  shift 64
	.  error


state 29
	Lval : ID .  (1)

	.  reduce 1


state 30
	Cond : Lval . RelOp Rval  (25)

	BAND  shift 45
	EQUAL  shift 46
	GEQ  shift 47
	GREATER  shift 48
	LEQ  shift 49
	LESS  shift 50
	NAND  shift 51
	NEQ  shift 52
	.  error

	RelOp  goto 57


state 31
	Conds : Cond .  (26)
	Conds : Cond . LAND Conds  (27)

	LAND  shift 65
	END  reduce 26
	ID  reduce 26
	M  reduce 26
	RARROW  reduce 26
	SEMICOLON  reduce 26


state 32
	Instruct : ASSERT Conds .  (39)

	.  reduce 39


state 33
	Instruct : CALL ID .  (37)

	.  reduce 37


state 34
	Instruct : ID LARROW . Cond  (46)

	ID  shift 29
	M  shift 17
	.  error

	Lval  goto 30
	Cond  goto 66


state 35
	Instruct : INCLUDEC STRINGCONST .  (43)

	.  reduce 43


state 36
	Lval : M LBRACK . ID RBRACK  (2)

	ID  shift 67
	.  error


state 37
	Instruct : READ Lval .  (40)

	.  reduce 40


state 38
	Rval : NUM .  (4)

	.  reduce 4


state 39
	Rval : Lval .  (3)

	.  reduce 3


state 40
	Rvals : Rval . Rvals  (6)
	Rvals : .  (5)

	ID  shift 29
	M  shift 17
	NUM  shift 38
	STRINGCONST  reduce 5

	Lval  goto 39
	Rval  goto 40
	Rvals  goto 68


state 41
	Instruct : TEST Rvals . STRINGCONST  (42)

	STRINGCONST  shift 69
	.  error


state 42
	Instruct : UNCALL ID .  (38)

	.  reduce 38


state 43
	Instruct : WRITE Lval .  (41)

	.  reduce 41


state 44
	Update : ADD .  (7)

	.  reduce 7


state 45
	RelOp : BAND .  (23)

	.  reduce 23


state 46
	RelOp : EQUAL .  (17)

	.  reduce 17


state 47
	RelOp : GEQ .  (22)

	.  reduce 22


state 48
	RelOp : GREATER .  (19)

	.  reduce 19


state 49
	RelOp : LEQ .  (21)

	.  reduce 21


state 50
	RelOp : LESS .  (18)

	.  reduce 18


state 51
	RelOp : NAND .  (24)

	.  reduce 24


state 52
	RelOp : NEQ .  (20)

	.  reduce 20


state 53
	Update : SUB .  (8)

	.  reduce 8


state 54
	Instruct : Lval SWAP . Lval  (36)

	ID  shift 29
	M  shift 17
	.  error

	Lval  goto 70


state 55
	Update : XORWITH .  (9)

	.  reduce 9


state 56
	Instruct : Lval Update . Rval Arith Rval  (34)
	Instruct : Lval Update . Rval  (35)

	ID  shift 29
	M  shift 17
	NUM  shift 38
	.  error

	Lval  goto 39
	Rval  goto 71


state 57
	Cond : Lval RelOp . Rval  (25)

	ID  shift 29
	M  shift 17
	NUM  shift 38
	.  error

	Lval  goto 39
	Rval  goto 72


state 58
	Instruct : Cond RARROW . ID  (45)

	ID  shift 73
	.  error


state 59
	Exit : END . ID  (31)

	ID  shift 74
	.  error


state 60
	Exit : RARROW . ID  (32)

	ID  shift 75
	.  error


state 61
	Instruct : Instruct SEMICOLON . Instruct  (44)

	ASSERT  shift 13
	CALL  shift 14
	ID  shift 15
	INCLUDEC  shift 16
	M  shift 17
	READ  shift 18
	SKIP  shift 19
	TEST  shift 20
	TIMER  shift 21
	UNCALL  shift 22
	WRITE  shift 23
	.  error

	Lval  goto 24
	Cond  goto 25
	Instruct  goto 76


state 62
	Exit : Cond . RARROW ID SEMICOLON ID  (33)

	RARROW  shift 77
	.  error


state 63
	Block : Entry Instruct Exit .  (49)

	.  reduce 49


state 64
	Entry : ID SEMICOLON ID LARROW . Cond  (30)

	ID  shift 29
	M  shift 17
	.  error

	Lval  goto 30
	Cond  goto 78


state 65
	Conds : Cond LAND . Conds  (27)

	ID  shift 29
	M  shift 17
	.  error

	Lval  goto 30
	Cond  goto 31
	Conds  goto 79


state 66
	Instruct : ID LARROW Cond .  (46)

	.  reduce 46


state 67
	Lval : M LBRACK ID . RBRACK  (2)

	RBRACK  shift 80
	.  error


state 68
	Rvals : Rval Rvals .  (6)

	.  reduce 6


state 69
	Instruct : TEST Rvals STRINGCONST .  (42)

	.  reduce 42


state 70
	Instruct : Lval SWAP Lval .  (36)

	.  reduce 36


state 71
	Instruct : Lval Update Rval . Arith Rval  (34)
	Instruct : Lval Update Rval .  (35)

	BAND  shift 81
	BOR  shift 82
	MINUS  shift 83
	PLUS  shift 84
	SHIFTL  shift 85
	SHIFTR  shift 86
	XOR  shift 87
	END  reduce 35
	ID  reduce 35
	M  reduce 35
	RARROW  reduce 35
	SEMICOLON  reduce 35

	Arith  goto 88


state 72
	Cond : Lval RelOp Rval .  (25)

	.  reduce 25


state 73
	Instruct : Cond RARROW ID .  (45)

	.  reduce 45


state 74
	Exit : END ID .  (31)

	.  reduce 31


state 75
	Exit : RARROW ID .  (32)

	.  reduce 32


state 76
	Instruct : Instruct . SEMICOLON Instruct  (44)
	Instruct : Instruct SEMICOLON Instruct .  (44)

	END  reduce 44
	ID  reduce 44
	M  reduce 44
	RARROW  reduce 44
	SEMICOLON  reduce 44


state 77
	Exit : Cond RARROW . ID SEMICOLON ID  (33)

	ID  shift 89
	.  error


state 78
	Entry : ID SEMICOLON ID LARROW Cond .  (30)

	.  reduce 30


state 79
	Conds : Cond LAND Conds .  (27)

	.  reduce 27


state 80
	Lval : M LBRACK ID RBRACK .  (2)

	.  reduce 2


state 81
	Arith : BAND .  (13)

	.  reduce 13


state 82
	Arith : BOR .  (14)

	.  reduce 14


state 83
	Arith : MINUS .  (11)

	.  reduce 11


state 84
	Arith : PLUS .  (10)

	.  reduce 10


state 85
	Arith : SHIFTL .  (15)

	.  reduce 15


state 86
	Arith : SHIFTR .  (16)

	.  reduce 16


state 87
	Arith : XOR .  (12)

	.  reduce 12


state 88
	Instruct : Lval Update Rval Arith . Rval  (34)

	ID  shift 29
	M  shift 17
	NUM  shift 38
	.  error

	Lval  goto 39
	Rval  goto 90


state 89
	Exit : Cond RARROW ID . SEMICOLON ID  (33)

	SEMICOLON  shift 91
	.  error


state 90
	Instruct : Lval Update Rval Arith Rval .  (34)

	.  reduce 34


state 91
	Exit : Cond RARROW ID SEMICOLON . ID  (33)

	ID  shift 92
	.  error


state 92
	Exit : Cond RARROW ID SEMICOLON ID .  (33)

	.  reduce 33


43 terminals, 16 nonterminals
54 grammar rules, 93 states
